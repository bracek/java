// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.springsource.roo.pizzashop.domain;

import com.springsource.roo.pizzashop.domain.Symbian_general;
import com.springsource.roo.pizzashop.domain.Symbian_generalDataOnDemand;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.stereotype.Component;

privileged aspect Symbian_generalDataOnDemand_Roo_DataOnDemand {
    
    declare @type: Symbian_generalDataOnDemand: @Component;
    
    private Random Symbian_generalDataOnDemand.rnd = new SecureRandom();
    
    private List<Symbian_general> Symbian_generalDataOnDemand.data;
    
    public Symbian_general Symbian_generalDataOnDemand.getNewTransientSymbian_general(int index) {
        Symbian_general obj = new Symbian_general();
        setApplication_icon(obj, index);
        return obj;
    }
    
    public void Symbian_generalDataOnDemand.setApplication_icon(Symbian_general obj, int index) {
        byte[] application_icon = String.valueOf(index).getBytes();
        obj.setApplication_icon(application_icon);
    }
    
    public Symbian_general Symbian_generalDataOnDemand.getSpecificSymbian_general(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        Symbian_general obj = data.get(index);
        Long id = obj.getId();
        return Symbian_general.findSymbian_general(id);
    }
    
    public Symbian_general Symbian_generalDataOnDemand.getRandomSymbian_general() {
        init();
        Symbian_general obj = data.get(rnd.nextInt(data.size()));
        Long id = obj.getId();
        return Symbian_general.findSymbian_general(id);
    }
    
    public boolean Symbian_generalDataOnDemand.modifySymbian_general(Symbian_general obj) {
        return false;
    }
    
    public void Symbian_generalDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = Symbian_general.findSymbian_generalEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'Symbian_general' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<Symbian_general>();
        for (int i = 0; i < 10; i++) {
            Symbian_general obj = getNewTransientSymbian_general(i);
            try {
                obj.persist();
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
